/**
 * generated by Xtext 2.9.2
 */
package de.htwg.zeta.xtext.calculatorForm;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Field Choice</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getName <em>Name</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isAutofocus <em>Autofocus</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isChecked <em>Checked</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isDisabled <em>Disabled</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getForm <em>Form</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getLabel <em>Label</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isMultiple <em>Multiple</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isNotdisplayed <em>Notdisplayed</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isReadonly <em>Readonly</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isRequired <em>Required</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getValue <em>Value</em>}</li>
 *   <li>{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getOptions <em>Options</em>}</li>
 * </ul>
 *
 * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice()
 * @model
 * @generated
 */
public interface FieldChoice extends Field
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Autofocus</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Autofocus</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Autofocus</em>' attribute.
   * @see #setAutofocus(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Autofocus()
   * @model
   * @generated
   */
  boolean isAutofocus();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isAutofocus <em>Autofocus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Autofocus</em>' attribute.
   * @see #isAutofocus()
   * @generated
   */
  void setAutofocus(boolean value);

  /**
   * Returns the value of the '<em><b>Checked</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Checked</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Checked</em>' attribute.
   * @see #setChecked(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Checked()
   * @model
   * @generated
   */
  boolean isChecked();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isChecked <em>Checked</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Checked</em>' attribute.
   * @see #isChecked()
   * @generated
   */
  void setChecked(boolean value);

  /**
   * Returns the value of the '<em><b>Disabled</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Disabled</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Disabled</em>' attribute.
   * @see #setDisabled(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Disabled()
   * @model
   * @generated
   */
  boolean isDisabled();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isDisabled <em>Disabled</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Disabled</em>' attribute.
   * @see #isDisabled()
   * @generated
   */
  void setDisabled(boolean value);

  /**
   * Returns the value of the '<em><b>Form</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Form</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Form</em>' attribute.
   * @see #setForm(String)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Form()
   * @model
   * @generated
   */
  String getForm();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getForm <em>Form</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Form</em>' attribute.
   * @see #getForm()
   * @generated
   */
  void setForm(String value);

  /**
   * Returns the value of the '<em><b>Label</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Label</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Label</em>' attribute.
   * @see #setLabel(String)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Label()
   * @model
   * @generated
   */
  String getLabel();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getLabel <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Label</em>' attribute.
   * @see #getLabel()
   * @generated
   */
  void setLabel(String value);

  /**
   * Returns the value of the '<em><b>Multiple</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Multiple</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Multiple</em>' attribute.
   * @see #setMultiple(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Multiple()
   * @model
   * @generated
   */
  boolean isMultiple();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isMultiple <em>Multiple</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Multiple</em>' attribute.
   * @see #isMultiple()
   * @generated
   */
  void setMultiple(boolean value);

  /**
   * Returns the value of the '<em><b>Notdisplayed</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Notdisplayed</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Notdisplayed</em>' attribute.
   * @see #setNotdisplayed(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Notdisplayed()
   * @model
   * @generated
   */
  boolean isNotdisplayed();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isNotdisplayed <em>Notdisplayed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Notdisplayed</em>' attribute.
   * @see #isNotdisplayed()
   * @generated
   */
  void setNotdisplayed(boolean value);

  /**
   * Returns the value of the '<em><b>Readonly</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Readonly</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Readonly</em>' attribute.
   * @see #setReadonly(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Readonly()
   * @model
   * @generated
   */
  boolean isReadonly();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isReadonly <em>Readonly</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Readonly</em>' attribute.
   * @see #isReadonly()
   * @generated
   */
  void setReadonly(boolean value);

  /**
   * Returns the value of the '<em><b>Required</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Required</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Required</em>' attribute.
   * @see #setRequired(boolean)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Required()
   * @model
   * @generated
   */
  boolean isRequired();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#isRequired <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Required</em>' attribute.
   * @see #isRequired()
   * @generated
   */
  void setRequired(boolean value);

  /**
   * Returns the value of the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Value</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Value</em>' attribute.
   * @see #setValue(String)
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Value()
   * @model
   * @generated
   */
  String getValue();

  /**
   * Sets the value of the '{@link de.htwg.zeta.xtext.calculatorForm.FieldChoice#getValue <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Value</em>' attribute.
   * @see #getValue()
   * @generated
   */
  void setValue(String value);

  /**
   * Returns the value of the '<em><b>Options</b></em>' containment reference list.
   * The list contents are of type {@link de.htwg.zeta.xtext.calculatorForm.FieldChoiceOption}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Options</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Options</em>' containment reference list.
   * @see de.htwg.zeta.xtext.calculatorForm.CalculatorFormPackage#getFieldChoice_Options()
   * @model containment="true"
   * @generated
   */
  EList<FieldChoiceOption> getOptions();

} // FieldChoice
